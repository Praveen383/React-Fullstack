{"version":3,"sources":["logo.svg","store/actions/actions.js","store/actions/action_types.js","containers/container1.js","containers/header.js","utils/history.js","containers/profile.js","containers/form1.js","containers/renderlist.js","functional/component1.js","functional/callback.js","functional/privatecomponent.js","functional/unauthredirect.js","functional/home.js","functional/renderlistitem.js","functional/signup.js","Blog/posts.js","Blog/addpost.js","Blog/showpost.js","Blog/editpost.js","Profile/showuser.js","Profile/sendmessage.js","Profile/showmessages.js","Profile/replytomessage.js","utils/authcheck.js","routes.js","utils/auth.js","App.js","serviceWorker.js","store/reducers/reducer1.js","store/reducers/auth_reducer.js","store/reducers/user_reducer.js","store/reducers/posts_reducer.js","store/reducers/index.js","index.js"],"names":["module","exports","SUCCESS","type","FAILURE","add_profile","profile","payload","Container1","onClick","console","log","props","stateprop1","action1","action2","action_creator1","action_creator2","this","user_text","Component","connect","state","reducer1","user_reducer","dispatch","ACTIONS","Header","to","style","padding","is_authenticated","auth","logout","login","auth_reducer","createHistory","Profile","handleClickOpen","pid","setState","open","post_id","handleClickClose","RenderProfile","src","profileData","picture","alt","email","name","email_verified","RenderPosts","post","Card","width","height","marginBottom","paddingBottom","CardHeader","title","pathname","subheader","className","date_created","CardContent","overflow","body","DeltePost","axios","delete","data","then","res","catch","err","setTimeout","history","replace","userData","JSON","parse","localStorage","getItem","user_id","id","get","params","set_user_posts","Button","variant","color","user_posts","map","key","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","posts_reducer","db_profile","posts","rows","Form1","value","handleChange","event","target","handleSubmit","preventDefault","input_action_creator","onSubmit","onChange","text","RenderList","items","num","bool","list_item","marginTop","Component1","Callback","PrivateComponent","UnauthRedirect","Home","RenderListItem","location","SignUp","size","Posts","animate_search_posts","posts_search_motion","i","posts_search","add_search_posts_to_state","handleSearch","search_query","search_posts_success","db_search_posts","error","handleTransition","opacity","add_posts_to_state","num_posts","length","page_range","slice_posts","animate_posts","indexOfLastPost","activePage","posts_per_page","indexOfFirstPost","posts_slice","slice","posts_motion","handlePageChange","pageNumber","moment","format","paddingLeft","textDecoration","auther","likes","set_posts","transition","TextField","label","margin","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","remove_search_posts","AddPost","uid","username","response","multiline","rowsMax","ShowPost","setCurUserID","isAuthenticated","cur_user_id","add_comments_to_state","comments","comments_arr","animate_comments","comment","comments_motion","handleCommentSubmit","submitted_comment","handleCommentUpdate","commentIndex","findIndex","com","cid","newArr","handleCommentDelete","delete_comment_id","filter","RenderComments","isEdited","author","handleCommentChange","window","scroll","top","left","behavior","handleUpdate","edited_comment","put","handleDelete","handleLikes","like_user_ids","includes","like_post","like_user_id","set_comments","cursor","EditPost","handleTitleChange","handleBodyChange","goBack","ShowUser","set_profile","set_db_posts","scrollTo","user_profile","OtherUserDBProfile","db_other_user_posts","SendMessage","message_to_username","message_sender","message_to","ShowMessages","RenderMessages","TableRow","TableCell","message","message_title","message_body","DeleteMessage","mid","set_user_messages","Table","TableHead","TableBody","user_messages","UserMessages","messages","ReplytoMessage","AuthCheck","send_profile_to_db","setItem","stringify","set_db_profile","login_success","userProfile","login_failure","remove_profile","remove_db_profile","auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","authorize","handleAuth","parseHash","authResult","accessToken","idToken","expiresAt","expiresIn","Date","getTime","getProfile","getAccessToken","client","userInfo","removeItem","PrivateRoute","component","render","Routes","exact","path","hash","handleAuthentication","App","hello","Boolean","hostname","match","initialState","Reducer1","action","AuthReducer","UserReducer","PostsReducer","rootReducer","combineReducers","defaults","baseURL","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed517edd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as ACTION_TYPES from './action_types'\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS\r\n}\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE\r\n}\r\n\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS\r\n  }\r\n}\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE\r\n  }\r\n}\r\n\r\nexport const user_input = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT,\r\n    payload: text\r\n  }\r\n}\r\n\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS\r\n  }\r\n}\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE\r\n  }\r\n}\r\n\r\n\r\nexport const add_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.ADD_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE\r\n  }\r\n}\r\n\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE\r\n  }\r\n}\r\n\r\nexport const fetch_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS\r\n  }\r\n}\r\n\r\n\r\nexport const fetch_post_comments = (comments) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_POST_COMMENTS,\r\n    payload: comments\r\n  }\r\n}\r\n\r\nexport const remove_post_comments = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_POST_COMMENTS\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const fetch_user_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USER_POSTS,\r\n    payload: posts.rows\r\n  }\r\n}\r\n\r\nexport const remove_user_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_POSTS\r\n  }\r\n}\r\n\r\nexport const fetch_search_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_SUCCESS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport const remove_search_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.SEARCH_POSTS_FAILURE\r\n  }\r\n}\r\n\r\n\r\n//Get posts from the db based on user id of another user\r\nexport function get_other_user_db_posts(posts) {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_OTHER_USER_DB_POSTS_SUCCESS,\r\n    payload: posts\r\n  }\r\n}\r\n\r\nexport function remove_other_user_db_posts() {\r\n  return {\r\n      type: ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS\r\n  }\r\n}\r\n\r\n\r\n//Actions for rendering profile info of another user\r\nexport function set_other_user_db_profile(profile) {\r\n  return {\r\n    type: ACTION_TYPES.SET_OTHER_USER_DB_PROFILE,\r\n    payload: profile\r\n  }\r\n}\r\n\r\nexport function remove_other_user_db_profile() {\r\n  return {\r\n      type: ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE\r\n  }\r\n}\r\n\r\n\r\n//Actions for setting users messages\r\nexport function set_user_messages(messages) {\r\n  return {\r\n    type: ACTION_TYPES.SET_USER_MESSAGES,\r\n    payload: messages\r\n  }\r\n}\r\n\r\nexport function remove_user_messages() {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_USER_MESSAGES\r\n  }\r\n}\r\n","\r\n\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const USER_INPUT = \"USER_INPUT\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const ADD_PROFILE = \"ADD_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n\r\nexport const FETCH_POST_COMMENTS = \"FETCH_POST_COMMENTS\"\r\n\r\nexport const REMOVE_POST_COMMENTS = \"REMOVE_POST_COMMENTS\"\r\n\r\nexport const FETCH_USER_POSTS = \"FETCH_USER_POSTS\"\r\n\r\nexport const REMOVE_USER_POSTS = \"REMOVE_USER_POSTS\"\r\n\r\nexport const SEARCH_POSTS_SUCCESS = \"SEARCH_POSTS_SUCCESS\"\r\n\r\nexport const SEARCH_POSTS_FAILURE = \"SEARCH_POSTS_FAILURE\"\r\n\r\nexport const REMOVE_OTHER_USER_DB_POSTS = 'REMOVE_OTHER_USER_DB_POSTS'\r\n\r\nexport const SET_OTHER_USER_DB_PROFILE = 'SET_OTHER_USER_DB_PROFILE'\r\n\r\nexport const REMOVE_OTHER_USER_DB_PROFILE = 'REMOVE_OTHER_USER_DB_PROFILE'\r\n\r\nexport const FETCH_OTHER_USER_DB_POSTS_SUCCESS = 'FETCH_OTHER_USER_DB_POSTS_SUCCESS'\r\n\r\nexport const SET_USER_MESSAGES = 'SET_USER_MESSAGES'\r\n\r\nexport const REMOVE_USER_MESSAGES = 'REMOVE_USER_MESSAGES'\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Container1 extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => console.log(this.props.stateprop1)}> Get State </button>\r\n        <button onClick={() => this.props.action1()}> Dispatch Action 1 </button>\r\n        <button onClick={() => this.props.action2()}>Dispatch Action 2 </button>\r\n        <button onClick={() => this.props.action_creator1()}>Dispatch Action Creator 1 </button>\r\n        <button onClick={() => this.props.action_creator2()}>Dispatch Action Creator 2 </button>\r\n        {this.props.user_text\r\n          ? <h3> {this.props.user_text} </h3>\r\n          : <h3> No User Text </h3>\r\n        }\r\n        <br />\r\n        {this.props.stateprop1\r\n          ? <p> stateprop1 is true </p>\r\n          : <p> stateprop1 is false </p>\r\n        }\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateprop1: state.reducer1.stateprop1,\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    action1: () => dispatch(ACTIONS.SUCCESS),\r\n    action2: () => dispatch(ACTIONS.FAILURE),\r\n    action_creator1: () => dispatch(ACTIONS.success()),\r\n    action_creator2: () => dispatch(ACTIONS.failure())\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container1);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n          <Link to='/' style={{padding: '5px'}}>\r\n            Home\r\n          </Link>\r\n          <Link to='/profile' style={{padding: '5px'}}>\r\n            Profile\r\n          </Link>\r\n          <Link to='/component1' style={{padding: '5px'}}>\r\n            Component 1\r\n          </Link>\r\n          <Link to='/form1' style={{padding: '5px'}}>\r\n            Form 1\r\n          </Link>\r\n          <Link to='/renderlist' style={{padding: '5px'}}>\r\n             List\r\n          </Link>\r\n          <Link to='/posts' style={{padding: '5px'}}>\r\n             Forum\r\n          </Link>\r\n          <Link to='/privateroute' style={{padding: '5px'}}>\r\n            Private Route\r\n          </Link>\r\n          {!this.props.is_authenticated\r\n            ? <button onClick={() => this.props.auth.login()}>Login</button>\r\n            : <button onClick={() => this.props.auth.logout()}>Logout</button>\r\n          }\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    is_authenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory()\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { Link } from 'react-router-dom';\r\nimport history from '../utils/history';\r\nimport axios from 'axios';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../App.css'\r\n\r\n\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: false,\r\n      post_id: null,\r\n      profileData: {},\r\n      userData: {}\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState({profileData: JSON.parse(localStorage.getItem('profileData'))})\r\n    this.setState({userData: JSON.parse(localStorage.getItem('USERDATA'))[0]})\r\n    const user_id = JSON.parse(localStorage.getItem('USERDATA'))[0].id\r\n    axios.get('/api/get/userposts', {params: { user_id: user_id}})\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        this.props.set_user_posts(res.data)\r\n      } )\r\n      .catch((err) => console.log(err))\r\n\r\n  }\r\n\r\n\r\n  handleClickOpen = (pid) => {\r\n    this.setState({open: true, post_id: pid })\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.setState({open: false, post_id: null })\r\n  }\r\n\r\n\r\n  RenderProfile = (props) => (\r\n    <div>\r\n      {/* <h1>{props.profile.profile.nickname}</h1> */}\r\n      <br />\r\n      <img src={this.state.profileData.picture} alt=\"\" />\r\n      <br />\r\n      <h4> {this.state.profileData.email}</h4>\r\n      <br />\r\n      <h5> {this.state.profileData.name} </h5>\r\n      <br />\r\n      <h6> Email Verified: </h6>\r\n      {this.state.profileData.email_verified ? <p>Yes</p> : <p>No</p> }\r\n      <br />\r\n    </div>\r\n  )\r\n\r\n  RenderPosts = post => (\r\n    <Card style={{width: '500px', height: '200px', marginBottom: '10px', paddingBottom: '80px' }}>\r\n      <CardHeader\r\n        title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n                </Link> }\r\n        subheader={\r\n          <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n                {post.post.date_created}\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                <Link to={{pathname:'/editpost/' + post.post.pid, state:{post} }}>\r\n                  <button>\r\n                   Edit\r\n                  </button>\r\n                </Link>\r\n                <button onClick={() => this.handleClickOpen(post.post.pid) }>\r\n                 Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n            }\r\n          />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{overflow: 'hidden' }}> {post.post.body} </span>\r\n      </CardContent>\r\n\r\n    </Card>\r\n  );\r\n\r\n  DeltePost = () => {\r\n    const post_id = this.state.post_id\r\n    axios.delete('api/delete/postcomments', {data: { post_id: post_id }} )\r\n      .then(() => axios.delete('/api/delete/post', {data: { post_id: post_id }} )\r\n          .then(res => console.log(res) ) )\r\n      .catch(err => console.log(err))\r\n      .then(() => this.handleClickClose())\r\n      .then(() => setTimeout(() => history.replace('/'), 700 ) )\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <this.RenderProfile profile={this.state.profileData} />\r\n\r\n        </div>\r\n        <div>\r\n        <Link to={{pathname:\"/showmessages/\" + this.state.user_id }}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n             Show Messages\r\n          </Button>\r\n       </Link>\r\n       <br />\r\n        </div>\r\n        <div>\r\n          {this.props.user_posts\r\n            ? this.props.user_posts.map(post => \r\n              <this.RenderPosts post={post} key={post.pid} /> )\r\n            : null }\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\"> Confirm Delete? </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText\r\n                id=\"alert-dialog-description\"\r\n                >\r\n                  Deleteing Post\r\n                </DialogContentText>\r\n                <DialogActions>\r\n                  <Button onClick={() => this.DeltePost() }>\r\n                    Agree\r\n                  </Button>\r\n                  <Button onClick={() => this.handleClickClose()}>\r\n                    Cancel\r\n                  </Button>\r\n              </DialogActions>\r\n            </DialogContent>\r\n        </Dialog>\r\n\r\n      </div>\r\n\r\n\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.auth_reducer.profile,\r\n    user_posts: state.posts_reducer.user_posts,\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_user_posts: (posts) => {\r\n      console.log('posts', posts)\r\n      dispatch(ACTIONS.fetch_user_posts(posts))\r\n    } \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { Component } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass Form1 extends Component {\r\n\r\n  state ={\r\n    value: ''\r\n  }\r\n\r\n  handleChange = (event) => (\r\n    this.setState({value: event.target.value})\r\n  )\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.props.input_action_creator(event.target.name.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Input </label>\r\n          <input id=\"name\" onChange={this.handleChange} type=\"text\" />\r\n          <button type=\"submit\"> Submit </button>\r\n        </form>\r\n        <br />\r\n        <h3>React State:</h3>\r\n        <p>{this.state.value}</p>\r\n        <br />\r\n        <h3>Redux State:</h3>\r\n        <p>{this.props.user_text}</p>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user_text: state.user_reducer.user_text\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    input_action_creator: (text) => dispatch(ACTIONS.user_input(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form1);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass RenderList extends Component {\r\n  state = {\r\n      items:\r\n        [\r\n          {id: 1, text: \"text 1\", num: 10, bool: true },\r\n          {id: 2, text: \"text 2\", num: 20, bool: false },\r\n          {id: 3, text: \"text 3\", num: 30, bool: true }\r\n        ]\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.state.items.map(list_item =>\r\n        <div key={list_item.id}>\r\n          <Link to={{pathname:'/listitem/' + list_item.id, state:{list_item} }} style={{marginTop: '25px', padding: '5px'}}>\r\n            List Item {list_item.id}\r\n          </Link>\r\n          <br />\r\n          <br />\r\n        </div>\r\n        )}\r\n      </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RenderList);\r\n","import React from 'react'\r\n\r\nconst Component1 = props => (\r\n    <div>\r\n    Component 1\r\n    {console.log(props)}\r\n    </div>\r\n);\r\n\r\nexport default Component1;\r\n","import React from 'react'\r\n\r\nconst Callback = props => (\r\n    <div>\r\n      Callback\r\n    </div>\r\n);\r\n\r\nexport default Callback;\r\n","import React from 'react'\r\n\r\nconst PrivateComponent = props => (\r\n    <div>\r\n      Private Component\r\n    </div>\r\n);\r\n\r\nexport default PrivateComponent;\r\n","import React from 'react'\r\n\r\nconst UnauthRedirect = props => (\r\n    <div>\r\n      UnauthRedirect\r\n    </div>\r\n);\r\n\r\nexport default UnauthRedirect;\r\n","import React from 'react'\r\n\r\nconst Home = props => (\r\n    <div>\r\n      Home\r\n    </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\n\r\nconst RenderListItem = props => (\r\n    <div>\r\n      <h3>{props.location.state.list_item.text}</h3>\r\n      <h4> {props.location.state.list_item.num} </h4>\r\n      <div>{props.location.state.list_item.bool\r\n              ? <p>Boolean is True</p>\r\n              : <p>Boolean is False</p>\r\n            }\r\n      </div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\nexport default RenderListItem;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst SignUp = (props) => (\r\n  <div className=\"FlexRowMain\">\r\n  <div>\r\n  <h1>Signup and Create an Account</h1>\r\n    <Button color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.auth.login()}>\r\n      Signup\r\n    </Button>\r\n  </div>\r\n  </div>\r\n)\r\n\r\nexport default (SignUp);\r\n"," import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport '../App.css'\r\n\r\n\r\n\r\n\r\n\r\nclass Posts extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n    this.state = {\r\n      posts: [],\r\n      opacity: 0,\r\n      posts_motion: [],\r\n      num_posts: 0,\r\n      page_range: 0,\r\n      activePage: 1,\r\n      posts_per_page: 5,\r\n      posts_slice: [],\r\n      posts_search: [],\r\n      posts_search_motion: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleTransition()\r\n    axios.get('/api/get/allposts')\r\n      .then(res => {\r\n        console.log(res.data)\r\n         this.props.set_posts(res.data)\r\n      } )\r\n      .then(() => this.add_posts_to_state(this.props.posts))\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  animate_search_posts = () => {\r\n    this.setState({posts_search_motion: [] })\r\n    let i = 1\r\n    this.state.posts_search.map(post => { // eslint-disable-line\r\n      setTimeout(() => { this.setState({posts_search_motion: [...this.state.posts_search_motion, post]}) }, 50 * i );\r\n      i++;\r\n    })\r\n  }\r\n\r\n  add_search_posts_to_state = (posts) => {\r\n    this.setState({posts_search: []});\r\n    this.setState({posts_search: [...posts]});\r\n\r\n    this.animate_search_posts();\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    const search_query = event.target.value\r\n    axios.get('/api/get/searchpost', {params: {search_query: search_query} })\r\n    .then(res => this.props.search_posts_success(res.data))\r\n    .then(() => this.add_search_posts_to_state(this.props.db_search_posts))\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      })\r\n  }\r\n\r\n  handleTransition = () => {\r\n    setTimeout(() => this.setState({opacity: 1}), 400 )\r\n  }\r\n\r\n  add_posts_to_state = (posts) => {\r\n    this.setState({posts: [...posts]})\r\n    this.setState({num_posts: this.state.posts.length})\r\n    this.setState({page_range: this.state.num_posts/5})\r\n\r\n    this.slice_posts();\r\n    this.animate_posts();\r\n  }\r\n\r\n  slice_posts = () => {\r\n     const indexOfLastPost = this.state.activePage * this.state.posts_per_page\r\n     const indexOfFirstPost = indexOfLastPost - this.state.posts_per_page\r\n\r\n\r\n     this.setState({posts_slice: this.state.posts.slice(indexOfFirstPost, indexOfLastPost) })\r\n   }\r\n\r\n   animate_posts = () => {\r\n      this.setState({posts_motion: [] })\r\n      let i = 1\r\n      this.state.posts_slice.map(post => {  // eslint-disable-line\r\n        setTimeout(() => { this.setState({posts_motion: [...this.state.posts_motion, post]}) }, 400 * i );\r\n        i++;\r\n      })\r\n    }\r\n\r\n  handlePageChange = (pageNumber) => {\r\n    this.setState({activePage: pageNumber});\r\n\r\n    setTimeout(() => { this.slice_posts() }, 50 )\r\n    setTimeout(() => { this.animate_posts() }, 100 )\r\n   }\r\n\r\n  RenderPosts = post => (\r\n    <div className=\"CardStyles\">\r\n    <Card >\r\n      <CardHeader\r\n        title={<Link to={{pathname:'/post/' + post.post.pid, state: {post}}}>\r\n                  {post.post.title}\r\n                </Link> }\r\n        subheader={\r\n            <div className=\"FlexColumn\">\r\n              <div className=\"FlexRow\">\r\n              {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\r\n              </div>\r\n              <div className=\"FlexRow\">\r\n                By:\r\n                <Link style={{paddingLeft: '5px', textDecoration: 'none'}} \r\n                      to={{pathname:\"/user/\" + post.post.auther, state:{post} }}>\r\n                 { post.post.auther }\r\n                 </Link>\r\n               </div>\r\n               <div className=\"FlexRow\">\r\n                <i className=\"material-icons\">thumb_up</i>\r\n                <div className=\"notification-num-allposts\"> {post.post.likes} </div>\r\n              </div>\r\n            </div>\r\n            }\r\n          />\r\n      <br />\r\n      <CardContent>\r\n        <span style={{overflow: 'hidden' }}> {post.post.body} </span>\r\n      </CardContent>\r\n    </Card>\r\n    </div>\r\n  )\r\n\r\n  render(){\r\n    console.log('this.state.posts_search_motion', this.state.posts_search_motion)\r\n    return(\r\n        <div>\r\n        <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n        <br />\r\n        { this.props.is_authenticated\r\n          ?  <Link to=\"/addpost\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Post\r\n                </Button>\r\n              </Link>\r\n          : <Link to=\"/signup\">\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Sign Up to Add Post\r\n                </Button>\r\n              </Link>\r\n            }\r\n        </div>\r\n        <TextField\r\n          id=\"search\"\r\n          label=\"Search\"\r\n          margin=\"normal\"\r\n          onChange={this.handleSearch}\r\n        />\r\n        <hr />\r\n        <hr />\r\n        <div>\r\n              {this.state.posts_search\r\n                ? this.state.posts_search_motion.map(post =>\r\n                <div>\r\n                  <this.RenderPosts key={post.pid} post={post} />\r\n\r\n                </div>\r\n                 )\r\n                 : null\r\n               }\r\n         </div>\r\n\r\n        <div style={{opacity: this.state.opacity, transition: 'opacity 2s ease'}}>\r\n        <h1>Posts</h1>\r\n          <div>\r\n                {this.state.posts\r\n                  ? this.state.posts_motion.map(post =>\r\n                    <this.RenderPosts key={post.pid} post={post} />\r\n                   )\r\n                   : null\r\n                 }\r\n           </div>\r\n         </div>\r\n         <Pagination\r\n             activePage={this.state.activePage}\r\n             itemsCountPerPage={5}\r\n             totalItemsCount={this.state.num_posts}\r\n             pageRangeDisplayed={this.state.page_range}\r\n             onChange={this.handlePageChange}\r\n            />\r\n        </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts_reducer.posts,\r\n    is_authenticated: state.auth_reducer.is_authenticated,\r\n    db_search_posts: state.posts_reducer.db_search_posts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    set_posts: (posts) => dispatch(ACTIONS.fetch_db_posts(posts)),\r\n    search_posts_success: (posts) => dispatch(ACTIONS.fetch_search_posts(posts)),\r\n    remove_search_posts: () => dispatch(ACTIONS.remove_search_posts())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass AddPost extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const user_id = this.props.db_profile[0].uid\r\n    const username = this.props.db_profile[0].username\r\n    const data = {title: event.target.title.value,\r\n                  body: event.target.body.value,\r\n                  username: username,\r\n                  id: user_id}\r\n    axios.post('/api/post/posttodb', data)\r\n      .then(response => console.log(response))\r\n      .catch((err) => console.log(err))\r\n      .then(setTimeout(() => history.replace('/'), 700) )\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log('this.props', this.props);\r\n\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            id='title'\r\n            label='Title'\r\n            margin='normal'\r\n            />\r\n          <br />\r\n          <TextField\r\n            id='body'\r\n            label='Body'\r\n            multiline\r\n            rowsMax='4'\r\n            margin=\"normal\"\r\n            />\r\n           <br />\r\n           <button type='submit'> Submit </button>\r\n           </form>\r\n        <br />\r\n        <button onClick={() => history.replace('/posts')}> Cancel </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddPost)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nclass ShowPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      open: false,\r\n      comment: '',\r\n      cid: '',\r\n      opacity: 0,\r\n      delete_comment_id: 0,\r\n      comments_arr: [],\r\n      comments_motion : [],\r\n      cur_user_id: null,\r\n      likes: this.props.location.state.post.post.likes,\r\n      like_user_ids: this.props.location.state.post.post.like_user_id,\r\n      like_post: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/api/get/allpostcomments', {params:\r\n                      {post_id: this.props.location.state.post.post.pid}} )\r\n      .then(res => this.props.set_comments(res.data))\r\n      .then(() => this.add_comments_to_state(this.props.comments))\r\n      .catch((err) => console.log(err));\r\n    this.setCurUserID();\r\n    this.handleTransition();\r\n  }\r\n\r\n  setCurUserID = () => {\r\n    if(this.props.isAuthenticated) {\r\n      this.setState({cur_user_id: this.props.db_profile[0].id})\r\n    }\r\n  }\r\n\r\n  handleTransition = () => (\r\n    setTimeout(() => this.setState({opacity: 1}), 400 )\r\n  );\r\n\r\n  add_comments_to_state = (comments) => {\r\n    this.setState({ comments_arr: [...comments]})\r\n    this.animate_comments();\r\n  }\r\n\r\n  animate_comments = () => {\r\n    let i = 1\r\n    this.state.comments_arr.map(comment => {  // eslint-disable-line\r\n      setTimeout(() => { this.setState({comments_motion: [...this.state.comments_motion, comment]}) }, 400 * i );\r\n      i++;\r\n    })\r\n  }\r\n\r\n  handleCommentSubmit = (submitted_comment) => {\r\n    setTimeout(() =>\r\n      this.setState({comments_motion: [submitted_comment, ...this.state.comments_motion]}),\r\n      50\r\n   )};\r\n\r\n   handleCommentUpdate = (comment) => {\r\n     const commentIndex = this.state.comments_motion.findIndex(com => com.cid === comment.cid)\r\n     let newArr = [...this.state.comments_motion]\r\n     newArr[commentIndex] = comment\r\n     this.setState({comments_motion: newArr })\r\n   };\r\n\r\n   handleCommentDelete = (cid) => {\r\n     this.setState({delete_comment_id: cid})\r\n     const newArr = this.state.comments_motion.filter(com => com.cid !== cid)\r\n     setTimeout(() => this.setState({comments_motion: newArr}), 900)\r\n   };\r\n\r\n  RenderComments = (comment) => (\r\n    <div className={this.state.delete_comment_id === comment.comment.cid\r\n                      ? \"FadeOutComment\"\r\n                      : \"CommentStyles\"}>\r\n      <h3> {comment.comment.comment} </h3>\r\n      <small>\r\n        { comment.comment.date_created === 'Just Now'\r\n          ?  <div> {comment.comment.isEdited\r\n                ? <span> Edited </span>\r\n                : <span> Just Now </span> }</div>\r\n          :  comment.comment.date_created\r\n        }\r\n      </small>\r\n      <p> By: { comment.comment.author} </p>\r\n      {comment.cur_user_id === comment.comment.user_id\r\n        ? <Button onClick={() => this.handleClickOpen(comment.comment.cid, comment.comment.comment)}>\r\n            Edit\r\n          </Button>\r\n        : null\r\n      }\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n  handleClickOpen = (cid, comment) => (\r\n    this.setState({ open: true, comment: comment, cid: cid})\r\n  );\r\n\r\n  handleClose = () => (\r\n    this.setState({open: false, comment: '', cid: '' })\r\n  );\r\n\r\n  handleCommentChange = (event) => (\r\n    this.setState({comment: event.target.value})\r\n  );\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    this.setState({comment: ''})\r\n\r\n    const comment = event.target.comment.value\r\n    const user_id = this.props.db_profile[0].id\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n    const current_time = \"Just Now\"\r\n    const temp_cid = 63426\r\n\r\n    const submitted_comment = {cid: temp_cid,\r\n                               comment: comment,\r\n                               user_id: user_id,\r\n                               author: username,\r\n                               date_created: current_time }\r\n\r\n    const data = {comment: comment,\r\n                  post_id: post_id,\r\n                  user_id: user_id,\r\n                  username: username }\r\n\r\n    axios.post('/api/post/commenttodb', data)\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    window.scroll({top: 0, left: 0, behavior: 'smooth'})\r\n    this.handleCommentSubmit(submitted_comment)\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    const comment = this.state.comment\r\n    const cid = this.state.cid\r\n    const user_id = this.props.db_profile[0].id\r\n    const post_id = this.props.location.state.post.post.pid\r\n    const username = this.props.db_profile[0].username\r\n    const isEdited = true\r\n    const current_time = \"Just Now\"\r\n\r\n    const edited_comment = {cid: cid,\r\n                            comment: comment,\r\n                            user_id: user_id,\r\n                            author: username,\r\n                            date_created: current_time,\r\n                            isEdited: isEdited }\r\n\r\n    const data = {cid: cid,\r\n                  comment: comment,\r\n                  post_id: post_id,\r\n                  user_id: user_id,\r\n                  username: username }\r\n\r\n    axios.put('/api/put/commenttodb', data)\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    this.handleCommentUpdate(edited_comment);\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const cid = this.state.cid\r\n    axios.delete('/api/delete/comment', {data: {cid: cid}} )\r\n      .then(res => console.log(res))\r\n      .catch((err) => console.log(err))\r\n    this.handleCommentDelete(cid)\r\n  }\r\n\r\n  handleLikes = () => {\r\n      const user_id = this.props.db_profile[0].id\r\n      const post_id = this.props.location.state.post.post.pid\r\n\r\n      const data = { id: user_id, post_id: post_id }\r\n      axios.put('/api/put/likes', data)\r\n        .then( !this.state.like_user_ids.includes(user_id) && this.state.like_post ? this.setState({likes: this.state.likes + 1}) : null)\r\n        .then(this.setState({like_post: false}))\r\n        .catch(err => console.log(err))\r\n    };\r\n\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n          <div>\r\n            <h2>Post</h2>\r\n              <h4>{this.props.location.state.post.post.title}</h4>\r\n              <p>{this.props.location.state.post.post.body}</p>\r\n              <p>{this.props.location.state.post.post.author}</p>\r\n              <a style={{cursor: 'pointer'}} onClick={this.props.isAuthenticated ? () => this.handleLikes() : () => history.replace('/signup')}>\r\n                  <i className=\"material-icons\">thumb_up</i>\r\n                  <small className=\"notification-num-showpost\"> {this.state.likes} </small>\r\n                </a>\r\n          </div>\r\n          <div>\r\n            <h2> Comments:</h2>\r\n            {this.props.comments\r\n              ? this.state.comments_motion.map((comment) =>\r\n                 <this.RenderComments\r\n                    comment={comment}\r\n                    key={comment.cid}\r\n                    cur_user_id={this.props.db_profile[0].id}\r\n                   />)\r\n                  : null\r\n            }\r\n          </div>\r\n          <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                id=\"comment\"\r\n                label=\"Comment\"\r\n                margin=\"normal\"\r\n              />\r\n              <br />\r\n              {this.props.isAuthenticated\r\n                ? <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n                : <Link to=\"/signup\">\r\n                     <Button  variant=\"contained\" color=\"primary\">\r\n                         Signup to Comment\r\n                      </Button>\r\n                   </Link>\r\n               }\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">Edit Comment</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText\r\n                    id=\"alert-dialog-description\"\r\n                    >\r\n                    <input type=\"text\" value={this.state.comment} onChange={this.handleCommentChange}/>\r\n                    </DialogContentText>\r\n                    <DialogActions>\r\n                      <Button onClick={() => {this.handleUpdate(); this.handleClose()} }>\r\n                         Agree\r\n                      </Button>\r\n                      <Button onClick={() => this.handleClose()}>\r\n                       Cancel\r\n                      </Button>\r\n                      <Button onClick={() => {this.handleDelete(); this.handleClose()} }>\r\n                        Delete\r\n                      </Button>\r\n                  </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    comments: state.posts_reducer.comments,\r\n    db_profile: state.auth_reducer.db_profile,\r\n    isAuthenticated: state.auth_reducer.is_authenticated\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    set_comments: (comments) => dispatch(ACTIONS.fetch_post_comments(comments))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowPost)\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass EditPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      title: '',\r\n      body: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title: this.props.location.state.post.post.title,\r\n      body: this.props.location.state.post.post.body\r\n    })\r\n  }\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({ title: event.target.value })\r\n  }\r\n\r\n  handleBodyChange = (event) => {\r\n    this.setState({ body: event.target.value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const user_id = this.props.db_profile[0].id\r\n    const username = this.props.db_profile[0].username\r\n    const pid = this.props.location.state.post.post.pid\r\n    const title = event.target.title.value\r\n    const body = event.target.body.value\r\n\r\n    const data = {\r\n                  title: title,\r\n                  body: body,\r\n                  pid: pid,\r\n                  id: user_id,\r\n                  username: username\r\n                    }\r\n    axios.put(\"/api/put/post\", data)\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err))\r\n      .then(setTimeout(() => history.replace('/profile'), 700 ))\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id='title'\r\n              label='title'\r\n              margin=\"normal\"\r\n              value={this.state.title}\r\n              onChange={this.handleTitleChange}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id='body'\r\n              label='body'\r\n              multiline\r\n              rows=\"4\"\r\n              margin='normal'\r\n              value={this.state.body}\r\n              onChange={this.handleBodyChange}\r\n              />\r\n          <br />\r\n          <button type=\"submit\"> Submit </button>\r\n          </form>\r\n          <br />\r\n          <button onClick={() => history.goBack()}> Cancel </button>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    db_profile: state.auth_reducer.db_profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditPost);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\n\r\nclass ShowUser extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    const username = this.props.location.state.post.post.author\r\n    axios.get('/api/get/otheruserprofilefromdb', {params: {username: username}} )\r\n      .then(res =>  this.props.set_profile(res.data))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n     axios.get('/api/get/otheruserposts', {params: {username: username}} )\r\n       .then(res =>  this.props.set_db_posts(res.data))\r\n       .catch(function (error) {\r\n           console.log(error);\r\n         })\r\n      window.scrollTo({top: 0, left: 0})\r\n    }\r\n\r\n\r\n  RenderProfile = (props) => (\r\n  <div>\r\n    <div className=\"FlexRow\">\r\n       <h1>\r\n          {props.profile.username}\r\n       </h1>\r\n       </div>\r\n       <div className=\"FlexRow\">\r\n       <Link to={{pathname:\"/sendmessage/\", state:{props} }}>\r\n           <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Send Message\r\n           </Button>\r\n        </Link>\r\n      </div>\r\n  </div>\r\n  );\r\n\r\n\r\n  RenderPosts = (post) => (\r\n    <div>\r\n     <Card className=\"CardStyles\">\r\n        <CardHeader\r\n          title={<Link to={{pathname:\"/post/\" + post.post.pid, state: {post} }}>\r\n                { post.post.title }\r\n                </Link>}\r\n          subheader={\r\n                    <div>\r\n                      <div >\r\n                      {  moment(post.post.date_created).format('MMMM Do, YYYY | h:mm a') }\r\n                      </div>\r\n                      <div >{ post.post.author}</div>\r\n                    </div> }\r\n        />\r\n        <CardContent>\r\n            <span style={{ overflow: 'hidden'}}>{ post.post.body } </span>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n\r\n  render() {\r\n     return (\r\n     <div>\r\n     <div className=\"FlexRow\">\r\n        { this.props.user_profile\r\n          ? <this.RenderProfile profile={this.props.user_profile[0]} />\r\n          : null\r\n         }\r\n     </div>\r\n\r\n    <br />\r\n    <hr className=\"style-two\" />\r\n\r\n     <h3> Latest Activity: </h3>\r\n       <div className=\"FlexColumn\">\r\n       { this.props.user_posts ?\r\n          this.props.user_posts.map(post =>\r\n          <div>\r\n             <this.RenderPosts key={ post.pid } post={post} />\r\n             <br />\r\n          </div>\r\n           )\r\n       : null\r\n       }\r\n       </div>\r\n     </div>\r\n     )}\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      user_profile: state.user_reducer.OtherUserDBProfile,\r\n      user_posts: state.user_reducer.db_other_user_posts\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_db_posts: (posts) => dispatch(ACTIONS.get_other_user_db_posts(posts)),\r\n    set_profile: (profile) => dispatch(ACTIONS.set_other_user_db_profile(profile))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nclass SendMessage extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = this.props.location.state.props.profile.username\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username, message_to: message_to_username, title: message_title, body: message_body }\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n\r\n     }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <TextField\r\n          id=\"body\"\r\n          multiline\r\n          rows=\"4\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n      </form>\r\n      <br />\r\n       <span>\r\n        <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n       </span>\r\n    </div>\r\n\r\n  )};\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(SendMessage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nclass ShowMessages extends Component {\r\n  componentDidMount() {\r\n    const username = this.props.db_profile[0].username\r\n    axios.get('/api/get/usermessages', {params: {username: username}})\r\n      .then(res =>  this.props.set_user_messages(res.data))\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n   }\r\n\r\n   RenderMessages = (props) => (\r\n   <TableRow>\r\n       <TableCell>\r\n         <p> <strong>From: </strong>  {props.message.message_sender} </p>\r\n         <p> <strong>Title </strong>   { props.message.message_title } </p>\r\n         <p><strong> Message:</strong>  { props.message.message_body } </p>\r\n         <small> { props.message.date_created } </small>\r\n         <br />\r\n         <Link to={{pathname:\"/replytomessage\", state:{props} }}>\r\n             <button>\r\n                Reply\r\n             </button>\r\n          </Link>\r\n         <button onClick={() => this.DeleteMessage(props.message.mid)}> Delete </button>\r\n         <br />\r\n         <br />\r\n         <button onClick={() => history.goBack()}> Cancel </button>\r\n      </TableCell>\r\n     </TableRow>\r\n   )\r\n\r\n  DeleteMessage = (mid) => {\r\n    axios.delete('/api/delete/usermessage', { data: { mid: mid }})\r\n    .then(res => console.log(res))\r\n    .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n     .then(() => setTimeout( function() { history.replace('/') }, 700))\r\n  }\r\n\r\n\r\n render() {\r\n  return (\r\n    <div>\r\n      <div className='FlexRow'>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell> <strong> Messages </strong> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { this.props.user_messages\r\n            ? this.props.user_messages.map( message =>\r\n              <this.RenderMessages key={message.mid} message={message} />\r\n            )\r\n            : null\r\n          }\r\n         </TableBody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n      db_profile: state.auth_reducer.db_profile,\r\n      user_messages: state.user_reducer.UserMessages\r\n  }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    set_user_messages: (messages) => dispatch(ACTIONS.set_user_messages(messages))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowMessages);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport history from '../utils/history';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nclass ReplytoMessage extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    const message_to_username = this.props.location.state.props.message.message_sender\r\n    const message_from_username = this.props.db_profile[0].username\r\n    const message_title = event.target.title.value\r\n    const message_body = event.target.body.value\r\n\r\n    const data = {message_sender: message_from_username, message_to: message_to_username, title: message_title, body: message_body }\r\n    axios.post('/api/post/messagetodb', data)\r\n      .then(response => console.log(response))\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(setTimeout( function() { history.replace('/') }, 700))\r\n\r\n     }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n    <h2> Message: </h2>\r\n    <div className='FlexColumn'>\r\n      <div >\r\n        <p><strong>{this.props.location.state.props.message.message_title}</strong></p>\r\n      </div>\r\n      <div >\r\n        <p>{this.props.location.state.props.message.message_body}</p>\r\n      </div>\r\n      <div >\r\n        <small> By: {this.props.location.state.props.message.message_sender}</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"FlexRow\">\r\n      <form onSubmit={this.handleSubmit}>\r\n        <TextField\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <TextField\r\n          id=\"body\"\r\n          multiline\r\n          rows=\"4\"\r\n          margin=\"normal\"\r\n        />\r\n        <br/>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" >Submit</Button>\r\n      </form>\r\n        <br />\r\n      </div>\r\n      <div className=\"FlexRow\">\r\n        <button className=\"CancelButton\" onClick={() => history.replace('/')}> Cancel </button>\r\n      </div>\r\n    </div>\r\n  )};\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        db_profile: state.auth_reducer.db_profile\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ReplytoMessage);\r\n","import React, { Component } from 'react';\r\nimport history from './history';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nclass AuthCheck extends Component {\r\n\r\n  send_profile_to_db = (profile) => {\r\n    const data = profile\r\n    axios.post('/api/posts/userprofiletodb', data )\r\n      .then(axios.get('/api/get/userprofilefromdb', {params: {email: profile.profile.email}})\r\n        .then(res => {\r\n          console.log('userdata',res.data)\r\n          localStorage.setItem('USERDATA', JSON.stringify(res.data));\r\n          this.props.set_db_profile(res.data)\r\n        } ) )\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if(this.props.auth.isAuthenticated()) {\r\n      console.log('isAuthenticated')\r\n      this.props.login_success()\r\n      this.props.add_profile(this.props.auth.userProfile)\r\n      this.send_profile_to_db(this.props.auth.userProfile)\r\n      setTimeout(() => history.replace('/'), 50)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n      this.props.remove_db_profile()\r\n      history.replace('/')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile()),\r\n    set_db_profile: (profile) => dispatch(ACTIONS.set_db_profile(profile)),\r\n    remove_db_profile: () => dispatch(ACTIONS.remove_db_profile())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthCheck);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Container1 from './containers/container1'\r\nimport Header from './containers/header';\r\nimport Profile from './containers/profile';\r\nimport Form1 from './containers/form1';\r\nimport RenderList from './containers/renderlist';\r\n\r\n\r\nimport Component1 from './functional/component1';\r\nimport Callback from './functional/callback';\r\nimport PrivateComponent from './functional/privatecomponent';\r\nimport UnauthRedirect from './functional/unauthredirect';\r\nimport Home from './functional/home';\r\nimport RenderListItem from './functional/renderlistitem';\r\nimport SignUp from './functional/signup';\r\n\r\nimport Posts from './Blog/posts';\r\nimport AddPost from './Blog/addpost';\r\nimport ShowPost from './Blog/showpost';\r\nimport EditPost from './Blog/editpost';\r\n\r\nimport ShowUser from './Profile/showuser';\r\nimport SendMessage from './Profile/sendmessage';\r\nimport ShowMessages from './Profile/showmessages';\r\nimport ReplytoMessage from './Profile/replytomessage';\r\n\r\nimport * as ACTIONS from './store/actions/actions';\r\n\r\nimport Auth from './utils/auth';\r\nimport AuthCheck from './utils/authcheck';\r\nimport history from './utils/history';\r\n\r\nimport { Router, Route, Switch, Redirect } from 'react-router';\r\n\r\n\r\n\r\n\r\nexport const auth = new Auth()\r\n\r\nconst handleAuthentication = (props) => {\r\n  if(props.location.hash) {\r\n    auth.handleAuth()\r\n  }\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, auth }) => (\r\n  <Route render={props => auth.isAuthenticated() === true\r\n    ? <Component auth={auth} {...props} />\r\n    : <Redirect to={{pathname:'/redirect'}} />\r\n  }\r\n  />\r\n)\r\n\r\n\r\n\r\nclass Routes extends Component {\r\n  componentDidMount() {\r\n    if(auth.isAuthenticated()) {\r\n      this.props.login_success()\r\n      auth.getProfile()\r\n      setTimeout(() => {this.props.add_profile(auth.userProfile)}, 400)\r\n    }\r\n    else {\r\n      this.props.login_failure()\r\n      this.props.remove_profile()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Router history={history} >\r\n        <div>\r\n          <Header auth={auth} />\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/form1' component={Form1} />\r\n            <Route exact path='/container1' render={() => <Container1 auth={auth} /> } />\r\n            <Route path='/authcheck' render={() => <AuthCheck auth={auth} /> } />\r\n            <Route path='/redirect' component={UnauthRedirect} />\r\n            <Route path='/renderlist' component={RenderList} />\r\n\r\n            <Route path=\"/user/:name\" component={ ShowUser } />\r\n            <PrivateRoute path=\"/sendmessage\"  auth={auth} component={ SendMessage } />\r\n            <PrivateRoute path=\"/showmessages/:id\"  auth={auth}  component={ ShowMessages } />\r\n            <PrivateRoute path=\"/replytomessage\"  auth={auth}  component={ ReplytoMessage } />\r\n\r\n            <Route path='/posts' component={Posts} />\r\n            <Route path='/post/:pid' component={ShowPost} />\r\n            <Route path='/editpost/:pid' component={EditPost} />\r\n            <Route path='/addpost' component={AddPost} />\r\n            <Route path=\"/signup\" render={(props) => <SignUp auth={auth} {...props} />} />\r\n\r\n            <Route path='/callback' render={(props) => { handleAuthentication(props); return <Callback />}} />\r\n            <Route path=\"/component1\" render={(props) => <Component1 {...props} /> } />\r\n\r\n            <Route path=\"/listitem/:id\" component={RenderListItem} />\r\n\r\n            <PrivateRoute path=\"/privateroute\" auth={auth} component={PrivateComponent} />\r\n            <PrivateRoute path=\"/profile\" auth={auth} component={Profile} />\r\n\r\n          </Switch>\r\n        </div>\r\n        </Router>\r\n      </div>\r\n    )}\r\n}\r\n\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return {\r\n    login_success: () => dispatch(ACTIONS.login_success()),\r\n    login_failure: () => dispatch(ACTIONS.login_failure()),\r\n    add_profile: (profile) => dispatch(ACTIONS.add_profile(profile)),\r\n    remove_profile: () => dispatch(ACTIONS.remove_profile())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);\r\n","import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'webapp1.auth0.com',\r\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\r\n    // clientID: 'zptn6JfD3NPGZS8RWDaDyJ36Bjl9l1Yj',\r\n    redirectUri: 'http://52.15.70.136/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n      this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if(authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 2000);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if(localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if(accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n          if(profile) {\r\n            localStorage.setItem('profileData', JSON.stringify(profile))\r\n            this.userProfile = { profile }\r\n          }\r\n      } )\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    localStorage.removeItem('profileData')\r\n    localStorage.removeItem('USERDATA')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'; \nimport Routes from './routes';\n\n\n// const axiosInstance = axios.create({\n//   baseURL: 'https://jsonplaceholder.typicode.com'\n// })\nclass App extends Component {\n  state = {\n    hello: null\n  }\n\n  componentDidMount() {\n    // axiosInstance.get('/posts')\n    // .then(res => console.log(res))\n    // .catch(err => console.log(err))\n    // this.asyncFunction()\n  }\n\n  // asyncFunction = async () => {\n  //   await fetch('https://jsonplaceholder.typicode.com/posts')\n  //   .then(res => res.json())\n  //   .then(json => console.log(json))\n  // }\n  render() {\n    return (\n      <div>\n      React\n      <Routes />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  stateprop1: false,\r\n}\r\n\r\nconst Reducer1 = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.SUCCESS:\r\n        return {\r\n          ...state,\r\n          stateprop1: true\r\n        }\r\n      case ACTION_TYPES.FAILURE:\r\n        return {\r\n          ...state,\r\n          stateprop1: false\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default Reducer1;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  is_authenticated: false,\r\n  profile: null,\r\n  db_profile: null\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          is_authenticated: true\r\n        }\r\n      case ACTION_TYPES.LOGIN_FAILURE:\r\n        return {\r\n          ...state,\r\n          is_authenticated: false\r\n        }\r\n      case ACTION_TYPES.ADD_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: null\r\n        }\r\n      case ACTION_TYPES.SET_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          db_profile: action.payload[0]\r\n        }\r\n      case ACTION_TYPES.REMOVE_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          db_profile: null\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default AuthReducer;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\n\r\nconst initialState = {\r\n  user_text: '',\r\n  OtherUserDBProfile: null,\r\n  db_other_user_posts: [],\r\n  UserMessages: []\r\n}\r\n\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.USER_INPUT:\r\n        return {\r\n          ...state,\r\n          user_text: action.payload\r\n        }\r\n      case ACTION_TYPES.SET_OTHER_USER_DB_PROFILE:\r\n            return {\r\n              ...state,\r\n              OtherUserDBProfile: action.payload\r\n            }\r\n      case ACTION_TYPES.REMOVE_OTHER_USER_DB_PROFILE:\r\n        return {\r\n          ...state,\r\n          OtherUserDBProfile: null\r\n        }\r\n      case ACTION_TYPES.FETCH_OTHER_USER_DB_POSTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          db_other_user_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_OTHER_USER_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          db_other_user_posts: []\r\n        }\r\n      case ACTION_TYPES.SET_USER_MESSAGES:\r\n        return {\r\n          ...state,\r\n          UserMessages: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_USER_MESSAGES:\r\n        return {\r\n          ...state,\r\n          UserMessages: []\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default UserReducer;\r\n","import * as ACTION_TYPES from '../actions/action_types'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  comments: [],\r\n  user_posts: [],\r\n  db_search_posts: []\r\n}\r\n\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ACTION_TYPES.FETCH_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_DB_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: []\r\n        }\r\n      case ACTION_TYPES.FETCH_POST_COMMENTS:\r\n        return {\r\n          ...state,\r\n          comments: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_POST_COMMENTS:\r\n        return {\r\n          ...state,\r\n          comments: []\r\n        }\r\n      case ACTION_TYPES.FETCH_USER_POSTS:\r\n        return {\r\n          ...state,\r\n          user_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.REMOVE_USER_POSTS:\r\n        return {\r\n          ...state,\r\n          user_posts: []\r\n        }\r\n      case ACTION_TYPES.SEARCH_POSTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          db_search_posts: action.payload\r\n        }\r\n      case ACTION_TYPES.SEARCH_POSTS_FAILURE:\r\n        return {\r\n          ...state,\r\n          db_search_posts: []\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default PostsReducer;\r\n","import Reducer1 from './reducer1'\r\nimport AuthReducer from './auth_reducer';\r\nimport UserReducer from './user_reducer';\r\nimport PostsReducer from './posts_reducer'\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  reducer1: Reducer1,\r\n  auth_reducer: AuthReducer,\r\n  user_reducer: UserReducer,\r\n  posts_reducer: PostsReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\naxios.defaults.baseURL = 'http://localhost:5000';\n\nconst store = createStore(rootReducer, applyMiddleware());\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n                  <App />\n                </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}